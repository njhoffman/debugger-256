{"version":3,"sources":["../lib/parser.js"],"names":["_","require","options","subsystems","module","exports","messages","subsystem","render","subsystemsLength","maxBy","ss","length","out","i","message","isObject","nextMsg","test","match","forEach","customMessage","renderObj","colorTag","isUndefined","customColors","console","warn","replace","Array","join"],"mappings":"AAAA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAI,EAAEC,OAAF,EAAWC,UAAX,KAA0BF,QAAQ,YAAR,CAA9B;;AAEAG,OAAOC,OAAP,GAAiB,CAACC,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AAChD,QAAMC,mBAAmBT,EAAEU,KAAF,CAAQP,UAAR,EAAqBQ,EAAD,IAAQA,GAAGC,MAA/B,EAAuCA,MAAvC,GAAgD,CAAzE;AACA,MAAIC,MAAM,EAAV;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,SAASM,MAA7B,EAAqCE,GAArC,EAA0C;AACxC,QAAIC,UAAUT,SAASQ,CAAT,CAAd;AACA,QAAId,EAAEgB,QAAF,CAAWD,OAAX,CAAJ,EAAyB;AACvBF,aAAO,OAAOL,OAAOO,OAAP,EAAgBN,mBAAmB,CAAnC,CAAd;AACD,KAFD,MAEO;AACL,UAAIQ,UAAUX,SAASQ,IAAI,CAAb,CAAd;AACA,UAAI,OAAOI,IAAP,CAAYH,OAAZ,KAAwBE,QAAQ,OAAR,CAA5B,EAA8C;AAC5CH;AACA;AACAC,gBAAQI,KAAR,CAAc,UAAd,EAA0BC,OAA1B,CAAkCC,iBAAiB;AACjD,cAAIC,YAAY,EAAhB;AACA,cAAIC,WAAWN,WAAWA,QAAQ,OAAR,CAA1B;AACA,cAAIM,YAAYvB,EAAEwB,WAAF,CAActB,QAAQuB,YAAR,CAAqBF,QAArB,CAAd,CAAhB,EAA+D;AAC7DG,oBAAQC,IAAR,CAAc,6CAA2CJ,QAAS,wCAAlE;AACD,WAFD,MAEO,IAAIA,QAAJ,EAAc;AACnBD,sBAAUC,QAAV,IAAsBF,cAAcO,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAtB;AACAb,sBAAUA,QAAQa,OAAR,CAAgBP,aAAhB,EAA+Bb,OAAOc,SAAP,CAA/B,CAAV;AACD;AACDL,oBAAUX,SAASQ,IAAI,CAAb,CAAV;AACAA;AACD,SAXD;AAYAD,eAAOgB,MAAMpB,mBAAmBF,UAAUK,MAAnC,EAA2CkB,IAA3C,CAAgD,GAAhD,IAAuD,KAAvD,GAA+Df,OAAtE;AACD,OAhBD,MAgBO,IAAID,MAAM,CAAV,EAAa;AAClBD,eAAOgB,MAAMpB,mBAAmBF,UAAUK,MAAnC,EAA2CkB,IAA3C,CAAgD,GAAhD,IAAuD,KAAvD,GAA+DtB,OAAOO,OAAP,CAAtE;AACD,OAFM,MAEA;AACLF,eAAO,OAAOgB,MAAMpB,mBAAmB,CAAzB,EAA4BqB,IAA5B,CAAiC,GAAjC,CAAP,GAA+CtB,OAAOO,OAAP,CAAtD;AACD;AACF;AACF;AACD,SAAOF,GAAP;AACD,CAjCD","file":"parser.js","sourcesContent":["const _ = require('lodash');\nlet { options, subsystems } = require('./settings');\n\nmodule.exports = (messages, subsystem, render) => {\n  const subsystemsLength = _.maxBy(subsystems, (ss) => ss.length).length + 1;\n  let out = '';\n  for (var i = 0; i < messages.length; i++) {\n    let message = messages[i];\n    if (_.isObject(message)) {\n      out += '\\n' + render(message, subsystemsLength + 7);\n    } else {\n      let nextMsg = messages[i + 1];\n      if (/%.*%/.test(message) && nextMsg['color']) {\n        i++;\n        // check for special color directive\n        message.match(/(%.*?%)/g).forEach(customMessage => {\n          let renderObj = {};\n          let colorTag = nextMsg && nextMsg['color'];\n          if (colorTag && _.isUndefined(options.customColors[colorTag])) {\n            console.warn(`\\n -- Debugger Warning: Color Directive \"${colorTag}\" was not found in the settings. --\\n`);\n          } else if (colorTag) {\n            renderObj[colorTag] = customMessage.replace(/%/g, '');\n            message = message.replace(customMessage, render(renderObj));\n          }\n          nextMsg = messages[i + 1];\n          i++;\n        });\n        out += Array(subsystemsLength - subsystem.length).join(' ') + '   ' + message;\n      } else if (i === 0) {\n        out += Array(subsystemsLength - subsystem.length).join(' ') + '   ' + render(message);\n      } else {\n        out += '\\n' + Array(subsystemsLength + 7).join(' ') + render(message);\n      }\n    }\n  }\n  return out;\n};\n"]}